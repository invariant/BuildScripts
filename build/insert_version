#!/bin/zsh
# call with $BUILT_PRODUCTS_DIR $FULL_PRODUCT_NAME
set -eu; base=${0:a:h}/..; source $base/common; sayhi $0
plist="$1/$2/Contents/Info.plist"
sym_plist="$1/$2.dSYM/Contents/Info.plist"

# what was passed in
show plist sym_plist version_num version_string channel edition

# PlistBuddy and git executables
buddy='/usr/libexec/PlistBuddy'
git='/usr/bin/git'

# keys we will touch
key='CFBundleShortVersionString'
num_key='CFBundleVersion'
channel_key="PilotmoonReleaseChannel"
edition_key="PilotmoonReleaseEdition"
internal_key="PilotmoonInternalVersionString"

# the plist files and keys to replace
[[ -f $plist ]] || { print "Expected file at: $plist"; exit 1 }
[[ -f $sym_plist ]] || { print "Expected file at: $sym_plist"; exit 1 }

# set channel key
echo "Setting $channel_key to $channel in $plist"
$buddy -c "Add :$channel_key string" "$plist" || true
$buddy -c "Set :$channel_key $channel" "$plist"

# set edition key
echo "Setting $edition_key to $edition in $plist"
$buddy -c "Add :$edition_key string" "$plist" || true
$buddy -c "Set :$edition_key $edition" "$plist"

# original version
if [[ -v original_version_string ]]; then
  echo "Setting $internal_key to $original_version_string in $plist"
  $buddy -c "Add :$internal_key string" "$plist" || true
  $buddy -c "Set :$internal_key $original_version_string" "$plist"
fi

# main plist
echo "Setting $key to $version_string in $plist"
$buddy -c "Set :$key $version_string" "$plist"
echo "Setting $num_key to $version_num in $plist"
$buddy -c "Set :$num_key $version_num" "$plist"

# dsym plist 
echo "Setting $key to $version_string in $sym_plist"
$buddy -c "Set :$key $version_string" "$sym_plist"
echo "Setting $num_key to $version_num in $sym_plist"
$buddy -c "Set :$num_key $version_num" "$sym_plist"

saybye $0
